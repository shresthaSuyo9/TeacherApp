package com.teachermanagement.view;

import com.teachermanagement.model.TeacherModel;
import com.teachermanagement.util.ValidationUtil;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.teachermanagement.controller.datastructure.BinarySearch;  // For BinarySearch class
import com.teachermanagement.controller.datastructure.InsertionSort;  // For InsertionSort class
import com.teachermanagement.controller.datastructure.MergeSort;  // For MergeSort class
import com.teachermanagement.controller.datastructure.SelectionSort; // For Selection Class

/**
 *
 * @author SuyogShrestha23048669
 */
public class TeacherApp extends javax.swing.JFrame {

    private List<TeacherModel> teacherList;
    private java.awt.CardLayout cardLayout;
    private final ValidationUtil validationUtil;

    /**
     * Creates new form TeacherApp
     */
    public TeacherApp() {
        initComponents();
        validationUtil = new ValidationUtil();
        initializeLayout(); // Set up CardLayout and add screens
        initializeData(); // Initialize student data and table
        startProgress(); // Show loading screen and initiate progress       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMainScreen = new javax.swing.JPanel();
        pnlMainBar = new javax.swing.JPanel();
        lblMainBarLogo = new javax.swing.JLabel();
        lblMainBarSlogan = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        tabPaneMain = new javax.swing.JTabbedPane();
        pnlHome = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        pnlStudentList = new javax.swing.JPanel();
        spTblStudent = new javax.swing.JScrollPane();
        tblTeacher = new javax.swing.JTable();
        lblTblStudentTitle = new javax.swing.JLabel();
        txtfldTeacherid = new javax.swing.JTextField();
        txtfldPhoneNumber = new javax.swing.JTextField();
        txtfldTeacherName = new javax.swing.JTextField();
        txtfldQualification = new javax.swing.JTextField();
        txtfldEmail = new javax.swing.JTextField();
        txtfldSalary = new javax.swing.JTextField();
        cmbAddress = new javax.swing.JComboBox<>();
        cmbSpecilization = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        lblError = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        pnlAboutUs = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        pnlLoginScreen = new javax.swing.JPanel();
        pnlLoginLeft = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblLoginSlogan = new javax.swing.JLabel();
        lblLoginForgotPwd = new javax.swing.JLabel();
        lblLoginError = new javax.swing.JLabel();
        txtFldLoginUsername = new javax.swing.JTextField();
        pwdFldLogin = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        pnlLoadingScreen = new javax.swing.JPanel();
        lblLoadingLogo = new javax.swing.JLabel();
        pgBarSplashScreen = new javax.swing.JProgressBar(0,100);
        lblLoading = new javax.swing.JLabel();

        pnlMainScreen.setBackground(new java.awt.Color(255, 255, 255));
        pnlMainScreen.setMaximumSize(new java.awt.Dimension(1216, 750));
        pnlMainScreen.setMinimumSize(new java.awt.Dimension(1216, 750));
        pnlMainScreen.setPreferredSize(new java.awt.Dimension(1216, 750));

        pnlMainBar.setBackground(new java.awt.Color(255, 255, 204));
        pnlMainBar.setForeground(new java.awt.Color(255, 255, 204));

        lblMainBarLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/teachermanagement/resources/HomeLogo.png"))); // NOI18N

        lblMainBarSlogan.setFont(new java.awt.Font("Trebuchet MS", 1, 20)); // NOI18N
        lblMainBarSlogan.setText("Empowering Teachers, Enriching Education.");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/teachermanagement/resources/Exit.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMainBarLayout = new javax.swing.GroupLayout(pnlMainBar);
        pnlMainBar.setLayout(pnlMainBarLayout);
        pnlMainBarLayout.setHorizontalGroup(
            pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainBarLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lblMainBarLogo)
                .addGap(229, 229, 229)
                .addComponent(lblMainBarSlogan, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        pnlMainBarLayout.setVerticalGroup(
            pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainBarLayout.createSequentialGroup()
                .addGroup(pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainBarLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMainBarLogo)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlMainBarLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(lblMainBarSlogan)))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        tabPaneMain.setBackground(new java.awt.Color(255, 255, 255));
        tabPaneMain.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(234, 192, 32)));
        tabPaneMain.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tabPaneMain.setMaximumSize(new java.awt.Dimension(1118, 797));

        pnlHome.setBackground(new java.awt.Color(255, 255, 204));
        pnlHome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(234, 192, 32)));

        jLabel2.setBackground(new java.awt.Color(255, 255, 204));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/teachermanagement/resources/HomeWlc.png"))); // NOI18N

        javax.swing.GroupLayout pnlHomeLayout = new javax.swing.GroupLayout(pnlHome);
        pnlHome.setLayout(pnlHomeLayout);
        pnlHomeLayout.setHorizontalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeLayout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(jLabel2)
                .addContainerGap(123, Short.MAX_VALUE))
        );
        pnlHomeLayout.setVerticalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel2)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        tabPaneMain.addTab("Home", pnlHome);

        pnlStudentList.setBackground(new java.awt.Color(238, 238, 196));
        pnlStudentList.setMaximumSize(new java.awt.Dimension(1216, 750));
        pnlStudentList.setMinimumSize(new java.awt.Dimension(1216, 750));

        tblTeacher.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TeacherID", "TeacherName ", "Salary", "Email", "PhoneNo.", "Address", "Qualification", "Specilization"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTeacher.setGridColor(new java.awt.Color(0, 0, 0));
        tblTeacher.setMaximumSize(new java.awt.Dimension(900, 1200));
        tblTeacher.setMinimumSize(new java.awt.Dimension(900, 1200));
        tblTeacher.setPreferredSize(new java.awt.Dimension(900, 1200));
        tblTeacher.setSelectionBackground(new java.awt.Color(0, 0, 0));
        tblTeacher.setSelectionForeground(new java.awt.Color(234, 192, 32));
        tblTeacher.setShowGrid(true);
        tblTeacher.getTableHeader().setReorderingAllowed(false);
        spTblStudent.setViewportView(tblTeacher);
        if (tblTeacher.getColumnModel().getColumnCount() > 0) {
            tblTeacher.getColumnModel().getColumn(0).setResizable(false);
            tblTeacher.getColumnModel().getColumn(1).setResizable(false);
            tblTeacher.getColumnModel().getColumn(2).setResizable(false);
            tblTeacher.getColumnModel().getColumn(3).setResizable(false);
            tblTeacher.getColumnModel().getColumn(4).setResizable(false);
            tblTeacher.getColumnModel().getColumn(4).setPreferredWidth(40);
            tblTeacher.getColumnModel().getColumn(5).setResizable(false);
            tblTeacher.getColumnModel().getColumn(6).setResizable(false);
            tblTeacher.getColumnModel().getColumn(7).setResizable(false);
        }

        lblTblStudentTitle.setBackground(new java.awt.Color(255, 255, 255));
        lblTblStudentTitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTblStudentTitle.setText("Teacher Information");
        lblTblStudentTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(234, 192, 32)));

        txtfldTeacherid.setBorder(javax.swing.BorderFactory.createTitledBorder("TeacherID"));
        txtfldTeacherid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldTeacheridActionPerformed(evt);
            }
        });

        txtfldPhoneNumber.setBorder(javax.swing.BorderFactory.createTitledBorder("PhoneNumber"));
        txtfldPhoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldPhoneNumberActionPerformed(evt);
            }
        });

        txtfldTeacherName.setBorder(javax.swing.BorderFactory.createTitledBorder("TeacherName"));
        txtfldTeacherName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldTeacherNameActionPerformed(evt);
            }
        });

        txtfldQualification.setBorder(javax.swing.BorderFactory.createTitledBorder("Qualification"));
        txtfldQualification.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldQualificationActionPerformed(evt);
            }
        });

        txtfldEmail.setBorder(javax.swing.BorderFactory.createTitledBorder("Email"));
        txtfldEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldEmailActionPerformed(evt);
            }
        });

        txtfldSalary.setBorder(javax.swing.BorderFactory.createTitledBorder("Salary"));
        txtfldSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldSalaryActionPerformed(evt);
            }
        });

        cmbAddress.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Address", "Tarakeshwor", "Nagarjun", "Swayambu ", "Dallu", "SitaPaila", "Kalanki", "Kalimati", " " }));
        cmbAddress.setBorder(javax.swing.BorderFactory.createTitledBorder("Address"));
        cmbAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAddressActionPerformed(evt);
            }
        });

        cmbSpecilization.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Specialization", "AI", "Computing", "Networking", "BBA", "Multimedia", "BALLB", " ", " " }));
        cmbSpecilization.setBorder(javax.swing.BorderFactory.createTitledBorder("Specilization"));
        cmbSpecilization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSpecilizationActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Clear");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 102, 102));
        jButton5.setText("Delete");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton6.setText("Sort");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlStudentListLayout = new javax.swing.GroupLayout(pnlStudentList);
        pnlStudentList.setLayout(pnlStudentListLayout);
        pnlStudentListLayout.setHorizontalGroup(
            pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlStudentListLayout.createSequentialGroup()
                .addGap(0, 16, Short.MAX_VALUE)
                .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlStudentListLayout.createSequentialGroup()
                        .addComponent(spTblStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 1194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(pnlStudentListLayout.createSequentialGroup()
                        .addComponent(lblTblStudentTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6)
                        .addGap(53, 53, 53)
                        .addComponent(jButton2)
                        .addGap(29, 29, 29))))
            .addGroup(pnlStudentListLayout.createSequentialGroup()
                .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlStudentListLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtfldPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtfldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtfldTeacherid, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbSpecilization, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(303, 303, 303)
                        .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlStudentListLayout.createSequentialGroup()
                                .addComponent(cmbAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlStudentListLayout.createSequentialGroup()
                                .addComponent(txtfldSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlStudentListLayout.createSequentialGroup()
                                .addComponent(txtfldQualification, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlStudentListLayout.createSequentialGroup()
                                .addComponent(txtfldTeacherName, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlStudentListLayout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(lblError)))
                .addGap(215, 215, 215))
        );
        pnlStudentListLayout.setVerticalGroup(
            pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStudentListLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTblStudentTitle)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spTblStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblError)
                .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtfldTeacherName, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfldTeacherid, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlStudentListLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlStudentListLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtfldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtfldQualification, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlStudentListLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlStudentListLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlStudentListLayout.createSequentialGroup()
                        .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlStudentListLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtfldPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30))
                            .addGroup(pnlStudentListLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtfldSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)))
                        .addComponent(cmbSpecilization, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(148, 148, 148))
        );

        tabPaneMain.addTab("Admin Dashboard", pnlStudentList);

        pnlAboutUs.setBackground(new java.awt.Color(255, 255, 204));
        pnlAboutUs.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(234, 192, 32)));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/teachermanagement/resources/About Us.jpg"))); // NOI18N

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/teachermanagement/resources/AboutUs2.png"))); // NOI18N

        javax.swing.GroupLayout pnlAboutUsLayout = new javax.swing.GroupLayout(pnlAboutUs);
        pnlAboutUs.setLayout(pnlAboutUsLayout);
        pnlAboutUsLayout.setHorizontalGroup(
            pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAboutUsLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        pnlAboutUsLayout.setVerticalGroup(
            pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAboutUsLayout.createSequentialGroup()
                .addGroup(pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAboutUsLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlAboutUsLayout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(218, Short.MAX_VALUE))
        );

        tabPaneMain.addTab("About Us", pnlAboutUs);

        javax.swing.GroupLayout pnlMainScreenLayout = new javax.swing.GroupLayout(pnlMainScreen);
        pnlMainScreen.setLayout(pnlMainScreenLayout);
        pnlMainScreenLayout.setHorizontalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlMainBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tabPaneMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlMainScreenLayout.setVerticalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                .addComponent(pnlMainBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tabPaneMain, javax.swing.GroupLayout.PREFERRED_SIZE, 701, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlLoginScreen.setBackground(new java.awt.Color(229, 196, 162));
        pnlLoginScreen.setMaximumSize(new java.awt.Dimension(1216, 750));
        pnlLoginScreen.setMinimumSize(new java.awt.Dimension(1216, 750));
        pnlLoginScreen.setPreferredSize(new java.awt.Dimension(1216, 750));

        pnlLoginLeft.setBackground(new java.awt.Color(247, 255, 203));
        pnlLoginLeft.setMaximumSize(new java.awt.Dimension(570, 514));
        pnlLoginLeft.setMinimumSize(new java.awt.Dimension(570, 514));
        pnlLoginLeft.setPreferredSize(new java.awt.Dimension(570, 514));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/teachermanagement/resources/TeacherMSLogo.png"))); // NOI18N

        lblLoginSlogan.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblLoginSlogan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoginSlogan.setText("Empowering Teachers, Enriching Education.");

        javax.swing.GroupLayout pnlLoginLeftLayout = new javax.swing.GroupLayout(pnlLoginLeft);
        pnlLoginLeft.setLayout(pnlLoginLeftLayout);
        pnlLoginLeftLayout.setHorizontalGroup(
            pnlLoginLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(pnlLoginLeftLayout.createSequentialGroup()
                .addGroup(pnlLoginLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLoginLeftLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlLoginLeftLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(lblLoginSlogan, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        pnlLoginLeftLayout.setVerticalGroup(
            pnlLoginLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginLeftLayout.createSequentialGroup()
                .addGap(173, 173, 173)
                .addComponent(lblLoginSlogan)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(147, Short.MAX_VALUE))
        );

        lblLoginForgotPwd.setBackground(new java.awt.Color(0, 0, 0));
        lblLoginForgotPwd.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLoginForgotPwd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoginForgotPwd.setText("Forgot your password?");

        lblLoginError.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLoginError.setForeground(new java.awt.Color(255, 0, 0));
        lblLoginError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        txtFldLoginUsername.setBackground(new java.awt.Color(229, 196, 162));
        txtFldLoginUsername.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Username", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        txtFldLoginUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldLoginUsernameActionPerformed(evt);
            }
        });

        pwdFldLogin.setBackground(new java.awt.Color(229, 196, 162));
        pwdFldLogin.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Password", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        pwdFldLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdFldLoginActionPerformed(evt);
            }
        });

        btnLogin.setBackground(new java.awt.Color(204, 204, 204));
        btnLogin.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlLoginScreenLayout = new javax.swing.GroupLayout(pnlLoginScreen);
        pnlLoginScreen.setLayout(pnlLoginScreenLayout);
        pnlLoginScreenLayout.setHorizontalGroup(
            pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginScreenLayout.createSequentialGroup()
                .addComponent(pnlLoginLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(141, 141, 141)
                .addGroup(pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFldLoginUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                    .addComponent(pwdFldLogin, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                    .addComponent(lblLoginForgotPwd, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlLoginScreenLayout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblLoginError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(220, Short.MAX_VALUE))
        );
        pnlLoginScreenLayout.setVerticalGroup(
            pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginScreenLayout.createSequentialGroup()
                .addGroup(pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlLoginScreenLayout.createSequentialGroup()
                        .addComponent(lblLoginError, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtFldLoginUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pwdFldLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblLoginForgotPwd)
                        .addGap(21, 21, 21)
                        .addComponent(btnLogin)
                        .addGap(241, 241, 241))
                    .addComponent(pnlLoginLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 763, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1216, 679));
        setSize(new java.awt.Dimension(1216, 679));

        pnlLoadingScreen.setBackground(new java.awt.Color(209, 205, 175));
        pnlLoadingScreen.setMaximumSize(new java.awt.Dimension(1216, 750));
        pnlLoadingScreen.setMinimumSize(new java.awt.Dimension(1216, 750));

        lblLoadingLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoadingLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/teachermanagement/resources/LogIn.png"))); // NOI18N

        pgBarSplashScreen.setStringPainted(true);
        pgBarSplashScreen.setBackground(new java.awt.Color(51, 51, 51));
        pgBarSplashScreen.setForeground(new java.awt.Color(0, 0, 0));

        lblLoading.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLoading.setText("Loading...");

        javax.swing.GroupLayout pnlLoadingScreenLayout = new javax.swing.GroupLayout(pnlLoadingScreen);
        pnlLoadingScreen.setLayout(pnlLoadingScreenLayout);
        pnlLoadingScreenLayout.setHorizontalGroup(
            pnlLoadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoadingScreenLayout.createSequentialGroup()
                .addGroup(pnlLoadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLoadingScreenLayout.createSequentialGroup()
                        .addGap(351, 351, 351)
                        .addGroup(pnlLoadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLoading)
                            .addComponent(pgBarSplashScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlLoadingScreenLayout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(lblLoadingLogo)))
                .addContainerGap(219, Short.MAX_VALUE))
        );
        pnlLoadingScreenLayout.setVerticalGroup(
            pnlLoadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoadingScreenLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(lblLoadingLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 580, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblLoading)
                .addGap(1, 1, 1)
                .addComponent(pgBarSplashScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Initializes the layout of the application by setting up the CardLayout
     * and adding panels for different screens. Each panel is uniquely
     * identified for easy navigation between screens.
     */
    private void initializeLayout() {
        cardLayout = new java.awt.CardLayout();
        getContentPane().setLayout(cardLayout);

        // Add panels with unique identifiers
        getContentPane().add(pnlLoadingScreen, "LoadingScreen");
        getContentPane().add(pnlLoginScreen, "LoginScreen");
        getContentPane().add(pnlMainScreen, "MainScreen");

        // Start with the loading screen
        loadScreen("LoadingScreen");
    }

    /**
     * Initializes the application's data, including the teacher list and table.
     * Populates the teacher list with sample data for demonstration purposes.
     */
    private void initializeData() {
    // Initialize the teacher list
    teacherList = new LinkedList<>();

    // Create a table model with column names
    DefaultTableModel model = new DefaultTableModel(
        new Object[][]{}, // No initial data
        new String[]{ // Column names
            "Teacher ID", "Teacher Name", "Salary", "Email", "Phone Number", 
            "Address", "Qualification", "Specialization"
        }
    );
    tblTeacher.setModel(model);

    // Example data for the table
    registerTeacher(new TeacherModel(100, "Samir Adhikari", 50000, "Samir.4567@gmail.com", "9865327410", "Dallu", "MSc", "AI"));
    registerTeacher(new TeacherModel(221, "Suman Lama", 25000, "Suman.LAMA@gmail.com", "9876543210", "Swayambu", "PhD", "Computing"));
    registerTeacher(new TeacherModel(321, "Prasiddha Rawel", 47000, "Prasiddha.P@gmail.com", "9876551237", "Kalanki", "MSc", "Networking"));
    registerTeacher(new TeacherModel(456, "Suyog Shrestha", 50000, "Suyog.567@gmail.com", "9801472356", "Dallu", "MSc", "AI"));
    registerTeacher(new TeacherModel(789, "Dipsika Bajracharya", 45000, "Bajruu@gmail.com", "9812345678", "Kalimati", "PhD", "AI"));
    registerTeacher(new TeacherModel(234, "Subrina Shrestha", 40000, "Subri58@gmail.com", "9812456789", "Dallu", "MSc", "Multimedia"));

}

    /**
     * Simulates the loading progress using a SwingWorker thread. Updates a
     * progress bar incrementally and switches to the login screen upon
     * completion.
     */
    private void startProgress() {
        javax.swing.SwingWorker<Void, Integer> worker = new javax.swing.SwingWorker<>() {
            @Override
            protected Void doInBackground() throws Exception {
                for (int i = 0; i <= 100; i++) {
                    Thread.sleep(30); // Simulated delay for progress bar
                    publish(i); // Publish progress
                }
                return null;
            }

            @Override
            protected void process(java.util.List<Integer> chunks) {
                int progress = chunks.get(chunks.size() - 1);
                pgBarSplashScreen.setValue(progress);
            }

            @Override
            protected void done() {
                loadScreen("LoginScreen"); // Switch to login screen
            }
        };
        worker.execute(); // Start the worker thread
    }

    // Method to add teacher data and populate the table
    private void registerTeacher(TeacherModel teacherModel) {
    teacherList.add(teacherModel); // Add teacher to the list
    DefaultTableModel model = (DefaultTableModel) tblTeacher.getModel(); // Access table model
    model.addRow(new Object[]{
        teacherModel.getTeacherId(), teacherModel.getTeacherName(), teacherModel.getSalary(),
        teacherModel.getEmail(), teacherModel.getPhoneNumber(), teacherModel.getAddress(),
        teacherModel.getQualification(), teacherModel.getSpecialization()
    });
    
    System.out.println("Added Teacher: " + teacherModel.getTeacherName());
    System.out.println("Qualification: " + teacherModel.getQualification());
    System.out.println("Specialization: " + teacherModel.getSpecialization());
    
    tblTeacher.revalidate(); // Refresh the table
    tblTeacher.repaint();
}



    
    
    /**
     * Switches the application screen to the specified screen name.
     *
     * @param screenName The name of the screen to display.
     */
    private void loadScreen(String screenName) {
        cardLayout.show(getContentPane(), screenName);
    }
    
    private boolean checkDuplicateTeacher(TeacherModel teacher) {
        return teacherList.stream().anyMatch(t -> t.getTeacherId() == teacher.getTeacherId());
    }



    /**
     * Handles the login button action. Validates the username and password
     * input and navigates to the main screen if credentials are correct.
     * Displays appropriate error messages otherwise.
     *
     * @param evt The action event triggered by the login button.
     */
    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // Get the username and password input
        String username = txtFldLoginUsername.getText();
        String password = new String(pwdFldLogin.getPassword());

        // Check if username or password is empty
        if (username.isEmpty() || password.isEmpty()) {
            lblLoginError.setText("Please enter your username and password.");
        } // Check if username and password are incorrect
        else if (!username.equals("IslingTon") || !password.equals("12345")) {
            lblLoginError.setText("Username and password mismatch.");
        } // If credentials are correct, proceed to load the main screen
        else {
            lblLoginError.setText(""); // Clear any previous error messages
            loadScreen("MainScreen"); // Load the main screen
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void pwdFldLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdFldLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pwdFldLoginActionPerformed

    private void txtFldLoginUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldLoginUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldLoginUsernameActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // Get the input data from the UI fields
    String teacherId = txtfldTeacherid.getText();
String teacherName = txtfldTeacherName.getText();
String salary = txtfldSalary.getText();
String email = txtfldEmail.getText();
String phoneNumber = txtfldPhoneNumber.getText();
String qualification = txtfldQualification.getText();

// Check for null selection in JComboBox for Address
String address = (String) cmbAddress.getSelectedItem();
if (address == null) {
    JOptionPane.showMessageDialog(this, "Please select an address.", "Validation Error", JOptionPane.ERROR_MESSAGE);
    return; // Exit the method if no address is selected
}

// Check for null selection in JComboBox for Specialization
String specialization = (String) cmbSpecilization.getSelectedItem();
if (specialization == null) {
    JOptionPane.showMessageDialog(this, "Please select a specialization.", "Validation Error", JOptionPane.ERROR_MESSAGE);
    return; // Exit the method if no specialization is selected
}

// Validate the inputs using the ValidationUtil methods
if (ValidationUtil.isValidTeacherId(teacherId, lblError) &&
    ValidationUtil.isValidTeacherName(teacherName, lblError) &&
    ValidationUtil.isValidSalary(salary, lblError) &&
    ValidationUtil.isValidEmail(email, lblError) &&
    ValidationUtil.isValidPhoneNumber(phoneNumber, lblError) &&
    ValidationUtil.isValidAddress(address, lblError) &&
    ValidationUtil.isValidQualification(qualification, lblError) &&
    ValidationUtil.isValidSpecialization(specialization, lblError)){

    // Convert teacherId and salary to their respective types
    int teacherIdValue = Integer.parseInt(teacherId);
    double salaryValue = Double.parseDouble(salary);
    
    // Check if teacher ID or name already exists in teacherList
        for (TeacherModel teacher : teacherList) {
            if (teacher.getTeacherId() == teacherIdValue) {
                JOptionPane.showMessageDialog(this, "Teacher ID already exists. Please enter a new Teacher ID.", "Duplicate Error", JOptionPane.ERROR_MESSAGE);
                return; // Exit the method if Teacher ID already exists
            }

            if (teacher.getTeacherName().equalsIgnoreCase(teacherName)) {
                JOptionPane.showMessageDialog(this, "Teacher Name already exists. Please enter a new Name.", "Duplicate Error", JOptionPane.ERROR_MESSAGE);
                return; // Exit the method if Teacher Name already exists
            }
            
            if (teacher.getEmail().equalsIgnoreCase(email)) {
                JOptionPane.showMessageDialog(this, "Email already exists. Please enter a new Email.", "Duplicate Error", JOptionPane.ERROR_MESSAGE);
                return; // Exit the method if Email already exists
            }

            if (teacher.getPhoneNumber().equalsIgnoreCase(phoneNumber)) {
                JOptionPane.showMessageDialog(this, "Phone Number already exists. Please enter a new Phone Number.", "Duplicate Error", JOptionPane.ERROR_MESSAGE);
                return; // Exit the method if Phone Number already exists
            }
        }

    // Create a new TeacherModel instance
    TeacherModel teacherModel = new TeacherModel(
        teacherIdValue, teacherName, (int) salaryValue, email, phoneNumber, address, qualification, specialization
    );

    // Register the teacher
    registerTeacher(teacherModel);

    // Show a success message
    JOptionPane.showMessageDialog(this, "Teacher added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

} else {
    JOptionPane.showMessageDialog(this, "Please enter valid data.", "Validation Error", JOptionPane.ERROR_MESSAGE);
}
    
    }//GEN-LAST:event_btnAddActionPerformed

    private void cmbSpecilizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSpecilizationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSpecilizationActionPerformed

    private void txtfldSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldSalaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldSalaryActionPerformed

    private void txtfldEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldEmailActionPerformed

    private void txtfldQualificationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldQualificationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldQualificationActionPerformed

    private void txtfldTeacherNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldTeacherNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldTeacherNameActionPerformed

    private void txtfldPhoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldPhoneNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldPhoneNumberActionPerformed

    private void txtfldTeacheridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldTeacheridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldTeacheridActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        loadScreen("LoginScreen");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
     // Clear all the text fields
    txtfldTeacherid.setText("");
    txtfldTeacherName.setText("");
    txtfldSalary.setText("");
    txtfldEmail.setText("");
    txtfldPhoneNumber.setText("");
    txtfldQualification.setText("");
    
    // Reset the combo boxes to their default value (index 0)
    cmbSpecilization.setSelectedIndex(0); 
    cmbAddress.setSelectedIndex(0); 

    // Optionally show a confirmation or status message (optional)
    JOptionPane.showMessageDialog(this, "All fields have been cleared.", "Reset", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void cmbAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbAddressActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    // Get the selected row index
    int selectedRow = tblTeacher.getSelectedRow();

    // Validate if a row is selected
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a teacher to update.", "No Selection", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Get the current data of the selected row
    TeacherModel teacherModel = teacherList.get(selectedRow);

    // Populate the input fields with the current data
    txtfldTeacherid.setText(String.valueOf(teacherModel.getTeacherId()));
    txtfldTeacherName.setText(teacherModel.getTeacherName());
    txtfldSalary.setText(String.valueOf(teacherModel.getSalary()));
    txtfldEmail.setText(teacherModel.getEmail());
    txtfldPhoneNumber.setText(teacherModel.getPhoneNumber());
    cmbAddress.setSelectedItem(teacherModel.getAddress());
    txtfldQualification.setText(teacherModel.getQualification());
    cmbSpecilization.setSelectedItem(teacherModel.getSpecialization());

    // Prompt the user to edit the data in the fields and click Save
    int confirm = JOptionPane.showConfirmDialog(this,
        "Make your changes in the input fields and click 'OK' to save the updates.",
        "Edit Teacher Details", JOptionPane.OK_CANCEL_OPTION);

    if (confirm == JOptionPane.OK_OPTION) {
        // Retrieve updated data from the fields
        try {
            int updatedId = Integer.parseInt(txtfldTeacherid.getText());
            String updatedName = txtfldTeacherName.getText();
            double updatedSalary = Double.parseDouble(txtfldSalary.getText());
            String updatedEmail = txtfldEmail.getText();
            String updatedPhone = txtfldPhoneNumber.getText();
            String updatedAddress = cmbAddress.getSelectedItem().toString();
            String updatedQualification = txtfldQualification.getText();
            String updatedSpecialization = cmbSpecilization.getSelectedItem().toString();

            // Update the teacher model
            teacherModel.setTeacherId(updatedId);
            teacherModel.setTeacherName(updatedName);
            teacherModel.setSalary(updatedSalary);
            teacherModel.setEmail(updatedEmail);
            teacherModel.setPhoneNumber(updatedPhone);
            teacherModel.setAddress(updatedAddress);
            teacherModel.setQualification(updatedQualification);
            teacherModel.setSpecialization(updatedSpecialization);

            // Update the table model
            DefaultTableModel model = (DefaultTableModel) tblTeacher.getModel();
            model.setValueAt(updatedId, selectedRow, 0);
            model.setValueAt(updatedName, selectedRow, 1);
            model.setValueAt(updatedSalary, selectedRow, 2);
            model.setValueAt(updatedEmail, selectedRow, 3);
            model.setValueAt(updatedPhone, selectedRow, 4);
            model.setValueAt(updatedAddress, selectedRow, 5);
            model.setValueAt(updatedQualification, selectedRow, 6);
            model.setValueAt(updatedSpecialization, selectedRow, 7);

            // Show success message
            JOptionPane.showMessageDialog(this, "Teacher updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Please enter valid numeric data for ID and Salary.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
        }
    }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // Get the selected row index
    int selectedRow = tblTeacher.getSelectedRow();

    // Validate if a row is selected
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a teacher to delete.", "No Selection", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Confirm deletion
    int confirm = JOptionPane.showConfirmDialog(this, 
        "Are you sure you want to delete the selected teacher?", 
        "Confirm Deletion", JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
        // Remove the teacher from the teacher list
        teacherList.remove(selectedRow);

        // Remove the row from the table model
        DefaultTableModel model = (DefaultTableModel) tblTeacher.getModel();
        model.removeRow(selectedRow);

        // Show success message
        JOptionPane.showMessageDialog(this, "Teacher deleted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         // TODO: Add your handling code here for selection
        // Get the search value from the user
    String searchValue = JOptionPane.showInputDialog(this, "Enter Teacher Name to search:");

    if (searchValue != null && !searchValue.trim().isEmpty()) {
        // Sort the list alphabetically by name
        teacherList.sort((t1, t2) -> t1.getTeacherName().compareToIgnoreCase(t2.getTeacherName()));

        // Perform the binary search
        BinarySearch binarySearch = new BinarySearch();
        TeacherModel selectedTeacher = binarySearch.searchByName(searchValue, teacherList);

        if (selectedTeacher != null) {
            // Display the selected teacher's details
            JOptionPane.showMessageDialog(this, 
                "Teacher Found: \n" +
                "Name: " + selectedTeacher.getTeacherName() + "\n" +
                "ID: " + selectedTeacher.getTeacherId() + "\n" +
                "Salary: " + selectedTeacher.getSalary() + "\n" +
                "Specialization: " + selectedTeacher.getSpecialization() + "\n" +
                "Email: " + selectedTeacher.getEmail() + "\n" +
                "Phone: " + selectedTeacher.getPhoneNumber() + "\n" +
                "Address: " + selectedTeacher.getAddress() + "\n" +
                "Qualification: " + selectedTeacher.getQualification());
        } else {
            // Show a message if the teacher is not found
            JOptionPane.showMessageDialog(this, "Teacher not found!");
        }
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // Show sorting options
     // Show sorting options
    String[] options = {
        "Sort by Teacher ID", 
        "Sort by Name", 
        "Sort by Salary"
    };

    // Show dialog to select the sorting criteria
    int choice = JOptionPane.showOptionDialog(this, "Select Sort Criteria", "Sort Teachers",
            JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);

    // Handle the sorting based on the user's choice
    if (choice == 0) {
        // Sort by Teacher ID using Selection Sort
        SelectionSort selectionSort = new SelectionSort();
        teacherList = selectionSort.sortByTeacherId(teacherList, false);  // false for ascending order
        
        // Notify the user that the sorting was successful
        JOptionPane.showMessageDialog(this, "Teachers sorted by Teacher ID using Selection Sort.");
    } else if (choice == 1) {
        // Sort by Name using Insertion Sort
        InsertionSort insertionSort = new InsertionSort();
        teacherList = insertionSort.sortByName(teacherList, false);  // false for ascending order
        
        // Notify the user that the sorting was successful
        JOptionPane.showMessageDialog(this, "Teachers sorted by Name using Insertion Sort.");
    } else if (choice == 2) {
        // Sort by Salary using Merge Sort
        MergeSort mergeSort = new MergeSort();
        teacherList = mergeSort.sortBySalary(teacherList, false);  // false for ascending order
        
        // Notify the user that the sorting was successful
        JOptionPane.showMessageDialog(this, "Teachers sorted by Salary using Merge Sort.");
    }

    // After sorting, update the table with the sorted data
    updateTable();
}

private void updateTable() {
    // Ensure you have a DefaultTableModel for your table
    DefaultTableModel model = (DefaultTableModel) tblTeacher.getModel();
    
    // Clear any existing rows
    model.setRowCount(0);
    
    // Add sorted teacher data back into the table
    for (TeacherModel teacher : teacherList) {
        model.addRow(new Object[]{
            teacher.getTeacherId(), 
            teacher.getTeacherName(), 
            teacher.getSalary(),   
            teacher.getEmail(),            
            teacher.getPhoneNumber(),      
            teacher.getAddress(),          
            teacher.getQualification(),    
            teacher.getSpecialization()    
        });
    }

    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeacherApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeacherApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeacherApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeacherApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        TeacherApp app = new TeacherApp();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            app.setVisible(true);
        });

        app.startProgress();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnLogin;
    private javax.swing.JComboBox<String> cmbAddress;
    private javax.swing.JComboBox<String> cmbSpecilization;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblLoading;
    private javax.swing.JLabel lblLoadingLogo;
    private javax.swing.JLabel lblLoginError;
    private javax.swing.JLabel lblLoginForgotPwd;
    private javax.swing.JLabel lblLoginSlogan;
    private javax.swing.JLabel lblMainBarLogo;
    private javax.swing.JLabel lblMainBarSlogan;
    private javax.swing.JLabel lblTblStudentTitle;
    private javax.swing.JProgressBar pgBarSplashScreen;
    private javax.swing.JPanel pnlAboutUs;
    private javax.swing.JPanel pnlHome;
    private javax.swing.JPanel pnlLoadingScreen;
    private javax.swing.JPanel pnlLoginLeft;
    private javax.swing.JPanel pnlLoginScreen;
    private javax.swing.JPanel pnlMainBar;
    private javax.swing.JPanel pnlMainScreen;
    private javax.swing.JPanel pnlStudentList;
    private javax.swing.JPasswordField pwdFldLogin;
    private javax.swing.JScrollPane spTblStudent;
    private javax.swing.JTabbedPane tabPaneMain;
    private javax.swing.JTable tblTeacher;
    private javax.swing.JTextField txtFldLoginUsername;
    private javax.swing.JTextField txtfldEmail;
    private javax.swing.JTextField txtfldPhoneNumber;
    private javax.swing.JTextField txtfldQualification;
    private javax.swing.JTextField txtfldSalary;
    private javax.swing.JTextField txtfldTeacherName;
    private javax.swing.JTextField txtfldTeacherid;
    // End of variables declaration//GEN-END:variables
}
